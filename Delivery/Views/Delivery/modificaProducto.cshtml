@model Delivery.ServiceReference1.ProductosO

@{
    ViewBag.Title = "modificaProducto";
    Layout = "~/Views/Shared/_LayoutPrincipal.cshtml";
}

<h2 class="text-center"><strong>ACTUALIZAR PRODUCTO</strong></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.Label("CÓDIGO:", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.codigo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"} })
            @Html.ValidationMessageFor(model => model.codigo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("NOMBRE:", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("DESCRIPCIÓN:", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("PRECIO:", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("STOCK:", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.stock, new { htmlAttributes = new { @class = "form-control",@type = "text" } })
            @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("CATEGORIA:", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("categoria","")
        </div>
    </div>
    <div class="form-group">
        <div>
            @Html.Label("FOTO:", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img class="foto" src="@Url.Content(Model.foto)" />
            </div>
        </div>
    </div>

    <div class="form-group">
      
        <div class="col-md-10">
            @Html.EditorFor(model => model.foto, new { htmlAttributes = new { @class = "form-control", @Type="Hidden"} })
            @Html.ValidationMessageFor(model => model.foto, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="ACTUALIZAR" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Ver el Listado", "ListadoProductos", null, new { @class = "btn btn-primary" })
</div>
